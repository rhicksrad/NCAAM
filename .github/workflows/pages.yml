name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NCAAM_BASE: https://ncaam.hicksrch.workers.dev/ncaam
      NCAAM_DIAG: https://ncaam.hicksrch.workers.dev/diag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # IMPORTANT: install pnpm BEFORE setup-node when using cache: 'pnpm'
      - name: Setup pnpm (standalone)
        uses: pnpm/action-setup@v4
        with:
          standalone: true
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: |
            pnpm-lock.yaml
            **/pnpm-lock.yaml

      - name: Verify pnpm on PATH
        run: |
          pnpm -v
          which pnpm

      - name: Install deps
        run: pnpm install --frozen-lockfile || pnpm install

      - name: Set Vite base for GitHub Pages
        shell: bash
        run: |
          REPO="${{ github.event.repository.name }}"
          OWNER="${{ github.repository_owner }}"
          if [[ "$REPO" == "${OWNER}.github.io" ]]; then
            echo "VITE_BASE=/" >> "$GITHUB_ENV"
            echo "SITE_BASE=https://${OWNER}.github.io" >> "$GITHUB_ENV"
          else
            echo "VITE_BASE=/${REPO}/" >> "$GITHUB_ENV"
            echo "SITE_BASE=https://${OWNER}.github.io/${REPO}" >> "$GITHUB_ENV"
          fi

      - name: Typecheck (if present)
        run: pnpm run --if-present typecheck

      - name: Lint (if present)
        run: pnpm run --if-present lint

      - name: Build site data (if present)
        env:
          NCAAM_BASE: ${{ env.NCAAM_BASE }}
          BDL_PROXY_BASE: ${{ env.NCAAM_BASE }}
        run: pnpm run --if-present build:data

      - name: Build site (if present)
        env:
          VITE_BASE: ${{ env.VITE_BASE }}
        run: pnpm run --if-present build

      - name: Select Pages artifact directory
        id: pickdir
        shell: bash
        run: |
          if [ -d dist ]; then
            echo "BUILD_DIR=dist" >> "$GITHUB_ENV"
            echo "dir=dist" >> "$GITHUB_OUTPUT"
          elif [ -d public ]; then
            echo "BUILD_DIR=public" >> "$GITHUB_ENV"
            echo "dir=public" >> "$GITHUB_OUTPUT"
          else
            mkdir -p public
            echo '<!doctype html><meta charset="utf-8"><title>NCAA Hub</title><div id="app">No build output found. Placeholder deployed.</div>' > public/index.html
            echo "BUILD_DIR=public" >> "$GITHUB_ENV"
            echo "dir=public" >> "$GITHUB_OUTPUT"
          fi
          echo "Using ${{ steps.pickdir.outputs.dir }} as artifact path."

      - name: Copy root HTML entry pages into artifact
        shell: bash
        run: |
          shopt -s nullglob
          mkdir -p "${BUILD_DIR}"
          for page in *.html; do
            if [[ "$page" == "index.html" ]]; then
              continue
            fi
            echo "Including $page in ${BUILD_DIR}/$page"
            cp "$page" "${BUILD_DIR}/$page"
          done

      - name: Build sitemap/robots (if script present)
        run: |
          if [ -f scripts/build_sitemap.mjs ]; then
            node scripts/build_sitemap.mjs
          else
            echo "No sitemap script; skipping."
          fi

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_DIR }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
