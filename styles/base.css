@import url("./tokens.css");

:where(*, *::before, *::after) {
  box-sizing: border-box;
}

:where(html, body) {
  margin: 0;
  padding: 0;
}

html {
  min-height: 100%;
  font-size: 16px;
  background-color: var(--color-cream);
}

body {
  min-height: 100vh;
  background-color: var(--color-cream);
  color: var(--color-ink);
  font-family: var(--font-sans);
  font-size: 1rem;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  display: flex;
  flex-direction: column;
}

body > * {
  flex-shrink: 0;
}

a {
  color: var(--color-arc);
  text-decoration: none;
  transition: color var(--transition-base);
}

a:hover,
a:focus-visible {
  color: color-mix(in srgb, var(--color-arc) 80%, white 20%);
}

:where(button, input, select, textarea) {
  font: inherit;
  color: inherit;
}

button {
  border: 0;
  background: none;
  cursor: pointer;
}

button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

:where(img, svg, video, canvas) {
  display: block;
  max-width: 100%;
}

:where(ul, ol) {
  padding-left: 1.25rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-weight: 600;
  letter-spacing: -0.01em;
  color: var(--color-ink);
}

h1 {
  font-size: 1.85rem;
}

h2 {
  font-size: 1.35rem;
}

h3 {
  font-size: 1.1rem;
}

p {
  margin: 0;
}

strong {
  font-weight: 600;
}

.container {
  width: min(calc(100% - 2 * var(--space-lg)), var(--grid-max));
  margin-inline: auto;
}

main {
  padding-block: var(--space-xl);
}

.page {
  display: flex;
  flex-direction: column;
  gap: var(--space-lg);
  padding-bottom: var(--space-xl);
}

.page-intro {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
  color: var(--color-muted);
  max-width: 68ch;
}

.page-label {
  text-transform: uppercase;
  letter-spacing: 0.18em;
  font-size: 0.75rem;
  color: color-mix(in srgb, var(--color-muted) 70%, white 30%);
}

.page-summary {
  font-size: 0.95rem;
  line-height: 1.5;
  color: color-mix(in srgb, var(--color-muted) 90%, white 10%);
}

.page-content {
  display: flex;
  flex-direction: column;
  gap: var(--space-lg);
}

.stack {
  display: flex;
  flex-direction: column;
  gap: var(--space-md);
}

.stack[data-gap="sm"] {
  gap: var(--space-sm);
}

.stack[data-gap="lg"] {
  gap: var(--space-lg);
}

.stack[data-gap="xl"] {
  gap: var(--space-xl);
}

.grid {
  display: grid;
  gap: var(--grid-gap);
}

.grid[data-columns] {
  grid-template-columns: repeat(var(--grid-columns, auto-fit), minmax(0, 1fr));
}

@media (min-width: 768px) {
  main {
    padding-block: calc(var(--space-xl) * 1.2);
  }
}
